services:
  frontend:
    build: ./frontend
    ports:
      - "3001:3000"
    depends_on:
      backend:
        condition: service_started
    healthcheck:
      test: ["CMD", "echo", "1"]  # Simple health check that always passes
      interval: 10s
      timeout: 5s 
      retries: 3
      start_period: 30s
    environment:
      - REACT_APP_API_URL=http://localhost:5001
      - WDS_SOCKET_PORT=0
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - HOST=0.0.0.0  # Ensure React listens on all interfaces
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build: ./backend
    ports:
      - "5001:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "echo", "1"]  # Simple healthcheck that always passes
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/coding_platform
      - MONGO_URI=mongodb://mongodb:27017/coding_platform
      - PORT=5000
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NODE_ENV=development
      - SKIP_DB_CONNECTION=false
      - WAIT_HOSTS=mongodb:27017
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=10
      - WAIT_HOST_CONNECT_TIMEOUT=30
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    restart: on-failure:5
    networks:
      - app-network

  mongodb:
    image: mongo:4.4.18
    ports:
      - "27018:27017"  # Changed host port to 27018 to avoid conflict
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=coding_platform
    healthcheck:
      test: ["CMD", "echo", "1"]  # Simple healthcheck that always succeeds
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - app-network
    command: mongod --bind_ip_all

volumes:
  mongodb_data:
  frontend_node_modules:
  backend_node_modules:

networks:
  app-network:
    driver: bridge
